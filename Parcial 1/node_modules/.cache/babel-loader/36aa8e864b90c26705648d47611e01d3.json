{"ast":null,"code":"var _jsxFileName = \"E:\\\\PABLO\\\\CERTIFIED TECH DEVELOPER\\\\MATERIAS\\\\BIMESTRE 3\\\\FRONTEND III\\\\Parcial1\\\\evaluacion-noviembre-22\\\\src\\\\components\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // El componente Post no tiene componentes hijos.\n// ESTADO: Post debe tener un número para almacenar la cantidad de likes, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Post debe tener un método para manejar el click de su boton, el cual debe:\n//  - sumar 1 like al posteo\n//  - sumar en la cantidad total de likes contabilizada por App\n//  - mostrar en consola qué posteo sumó un like\n// PROPS: Post recibe todos los campos que muestra en pantalla: titulo, texto, likes y el método heredados para sumar en el total.\n// Maqueta de Post:\n//    h3\n//    p\n//    button       (este boton debe permitir sumar likes)\n//    h5    (este h5 debe mostrar la cantidad de likes, pero si la misma es mayor a 10 debe decir \"Más de 10 likes\")\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post(_ref) {\n  _s();\n\n  let {\n    aumentarLikesTotales,\n    posteo\n  } = _ref;\n  console.log(posteo);\n  const [likes, setLikes] = useState(0);\n\n  const sumarLikes = () => {\n    setLikes(valorPrevio => valorPrevio + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posteo\",\n    children: posteo.map(item => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"item.nombre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"m4sdoi624sGASZMfyLgbxubRP0c=\");\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","Post","aumentarLikesTotales","posteo","console","log","likes","setLikes","sumarLikes","valorPrevio","map","item"],"sources":["E:/PABLO/CERTIFIED TECH DEVELOPER/MATERIAS/BIMESTRE 3/FRONTEND III/Parcial1/evaluacion-noviembre-22/src/components/Post.js"],"sourcesContent":["import React, { useState } from 'react'\r\n// El componente Post no tiene componentes hijos.\r\n// ESTADO: Post debe tener un número para almacenar la cantidad de likes, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Post debe tener un método para manejar el click de su boton, el cual debe:\r\n//  - sumar 1 like al posteo\r\n//  - sumar en la cantidad total de likes contabilizada por App\r\n//  - mostrar en consola qué posteo sumó un like\r\n// PROPS: Post recibe todos los campos que muestra en pantalla: titulo, texto, likes y el método heredados para sumar en el total.\r\n// Maqueta de Post:\r\n//    h3\r\n//    p\r\n//    button       (este boton debe permitir sumar likes)\r\n//    h5    (este h5 debe mostrar la cantidad de likes, pero si la misma es mayor a 10 debe decir \"Más de 10 likes\")\r\n\r\nexport default function Post({ aumentarLikesTotales, posteo }) {\r\n  console.log(posteo);\r\n\r\n  const [likes, setLikes] = useState(0)\r\n\r\n  const sumarLikes = () => {\r\n    setLikes(valorPrevio => valorPrevio + 1)\r\n  }\r\n\r\n  return (\r\n    <div className='posteo'>\r\n      {\r\n        posteo.map(item => (\r\n          <h3>item.nombre</h3>\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,IAAT,OAAgD;EAAA;;EAAA,IAAlC;IAAEC,oBAAF;IAAwBC;EAAxB,CAAkC;EAC7DC,OAAO,CAACC,GAAR,CAAYF,MAAZ;EAEA,MAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;;EAEA,MAAMQ,UAAU,GAAG,MAAM;IACvBD,QAAQ,CAACE,WAAW,IAAIA,WAAW,GAAG,CAA9B,CAAR;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,QAAf;IAAA,UAEIN,MAAM,CAACO,GAAP,CAAWC,IAAI,iBACb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAFJ;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAlBuBV,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}